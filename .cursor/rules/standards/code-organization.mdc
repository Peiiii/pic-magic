# 代码组织规则

## 核心原则
- **目标**: 每个文件不超过200行
- **最大**: 250行
- **触发重构**: 超过200行时拆分文件

## 拆分方法
1. **提取类型**: 将接口和类型定义移到单独的 `types.ts` 文件
2. **分离职责**: 按功能将大文件拆分成多个小文件
3. **提取工具**: 将工具函数移到 `utils.ts` 文件
4. **分离关注点**: UI、逻辑、数据访问分别放在不同文件

## 可插拔/组合性设计
- **功能分离**: 不同功能模块完全独立，互不干扰
- **松耦合**: 模块间通过接口通信，避免直接依赖
- **可组合**: 功能模块可以灵活组合，支持不同使用场景
- **可替换**: 模块实现可以独立替换，不影响其他功能
- **配置化**: 通过配置控制功能启用/禁用，而非硬编码

## 检查清单
文件超过200行时检查：
- [ ] 可以提取类型到单独文件吗？
- [ ] 可以按功能拆分成多个文件吗？
- [ ] 可以提取工具函数吗？
- [ ] 可以分离UI、逻辑、数据吗？
- [ ] 功能模块是否完全独立？
- [ ] 模块间是否松耦合？

---
alwaysApply: true
description: 代码组织和模块化设计规则
---
